{
  "errors": [],
  "generated_at": "2019-10-06T19:44:56Z",
  "metrics": {
    ".\\sqlite_archive.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 7.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 521,
      "nosec": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 7.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 876,
      "nosec": 0
    },
    "sqlite3_archive\\fileinfo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "sqlite3_archive\\utility.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 311,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "355                             self.execquerynocommit(\n356                                 f\"select count(distinct filename) from {self.args.table} where filename = ?\",\n357                                 values=(fileinfo.name, ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 356,
      "line_range": [
        356
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "369                 query = self.execquerynocommit(\n370                     f\"select filename from {self.args.table} where hash == ?\",\n371                     (fileinfo.digest, ))[0][0]\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 370,
      "line_range": [
        370
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "460                     questionmarks: Any = '?' * fileslen\n461                     out = f\"select rowid, data from {self.args.table} where filename in ({','.join(questionmarks)}) order by filename asc\"\n462                     # out = f\"select rowid, data from {self.args.table} where filename in (?) order by filename asc\" # executemany doesn't work on select satements, apparently\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 461,
      "line_range": [
        461
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "463                 if self.files and fileslen == 1:\n464                     out = f\"select rowid, data from {self.args.table} where filename == ? order by filename asc\"\n465             else:\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 464,
      "line_range": [
        464
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "465             else:\n466                 out = f\"select rowid, data from {self.args.table} order by filename asc\"\n467 \n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 466,
      "line_range": [
        466
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "525                 fileinfo.name = self.execquerynocommit(\n526                     f\"select filename from {self.args.table} where rowid == ?\",\n527                     values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 526,
      "line_range": [
        526
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "530                 fileinfo.digest = self.execquerynocommit(\n531                     f\"select hash from {self.args.table} where rowid == ?\",\n532                     values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 531,
      "line_range": [
        531
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    }
  ]
}