{
  "errors": [],
  "generated_at": "2019-10-10T09:13:25Z",
  "metrics": {
    ".\\sqlite_archive.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 9.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 9.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 531,
      "nosec": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 9.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 9.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 892,
      "nosec": 0
    },
    "sqlite3_archive\\fileinfo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 44,
      "nosec": 0
    },
    "sqlite3_archive\\utility.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 317,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "357                             self.execquerynocommit(\n358                                 f\"select count(distinct filename) from {self.args.table} where filename = ?\",\n359                                 values=(fileinfo.name, ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 358,
      "line_range": [
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "371                 query = self.execquerynocommit(\n372                     f\"select filename from {self.args.table} where hash == ?\",\n373                     (fileinfo.digest, ))[0][0]\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 372,
      "line_range": [
        372
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "454                     questionmarks: Any = '?' * fileslen\n455                     out = f\"select rowid, data from {self.args.table} where filename in ({','.join(questionmarks)}) order by filename asc\"\n456                     # out = f\"select rowid, data from {self.args.table} where filename in (?) order by filename asc\" # executemany doesn't work on select satements, apparently\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 455,
      "line_range": [
        455
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "457                 if self.args.files and fileslen == 1:\n458                     out = f\"select rowid, data from {self.args.table} where filename == ? order by filename asc\"\n459             else:\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 458,
      "line_range": [
        458
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "459             else:\n460                 out = f\"select rowid, data from {self.args.table} order by filename asc\"\n461 \n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 460,
      "line_range": [
        460
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "520                     fileinfo.name = self.execquerynocommit(\n521                         f\"select filename from {self.args.table} where rowid == ?\",\n522                         values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 521,
      "line_range": [
        521
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "525                     fileinfo.digest = self.execquerynocommit(\n526                         f\"select hash from {self.args.table} where rowid == ?\",\n527                         values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 526,
      "line_range": [
        526
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "531                     fileinfo.name = self.execquerynocommit(\n532                         f\"select filename from {self.args.table} where pk = ?\",\n533                         values=(str(row[\"pk\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 532,
      "line_range": [
        532
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "537                     fileinfo.digest = self.execquerynocommit(\n538                         f\"select hash from {self.args.table} where pk == ?\",\n539                         values=(str(row[\"pk\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 538,
      "line_range": [
        538
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    }
  ]
}