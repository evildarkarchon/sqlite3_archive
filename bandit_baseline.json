{
  "errors": [],
  "generated_at": "2019-08-24T20:08:18Z",
  "metrics": {
    ".\\sqlite3_archive\\__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    ".\\sqlite3_archive\\fileinfo.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 39,
      "nosec": 0
    },
    ".\\sqlite3_archive\\utility.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 215,
      "nosec": 0
    },
    ".\\sqlite_archive.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 7.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 641,
      "nosec": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 7.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 7.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 895,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "489                             self.execquerynocommit(\n490                                 f\"select count(distinct filename) from {self.args.table} where filename = ?\",\n491                                 values=(fileinfo.name, ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 490,
      "line_range": [
        490
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "503                 query = self.execquerynocommit(\n504                     f\"select filename from {self.args.table} where hash == ?\",\n505                     (fileinfo.digest, ))[0][0]\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 504,
      "line_range": [
        504
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "573                     questionmarks: Any = '?' * fileslen\n574                     out = f\"select rowid, data from {self.args.table} where filename in ({','.join(questionmarks)}) order by filename asc\"\n575                     # out = f\"select rowid, data from {self.args.table} where filename in (?) order by filename asc\" # executemany doesn't work on select satements, apparently\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 574,
      "line_range": [
        574
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "576                 if self.files and fileslen == 1:\n577                     out = f\"select rowid, data from {self.args.table} where filename == ? order by filename asc\"\n578             else:\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 577,
      "line_range": [
        577
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "578             else:\n579                 out = f\"select rowid, data from {self.args.table} order by filename asc\"\n580 \n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 579,
      "line_range": [
        579
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "638                 fileinfo.name = self.execquerynocommit(\n639                     f\"select filename from {self.args.table} where rowid == ?\",\n640                     values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 639,
      "line_range": [
        639
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "643                 fileinfo.digest = self.execquerynocommit(\n644                     f\"select hash from {self.args.table} where rowid == ?\",\n645                     values=(str(row[\"rowid\"]), ),\n",
      "filename": ".\\sqlite_archive.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 644,
      "line_range": [
        644
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    }
  ]
}